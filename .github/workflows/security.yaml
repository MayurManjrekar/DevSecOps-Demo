name: Security Checks
on:
  workflow_dispatch:
  push:
    branches: 
      - main

jobs:
  Linting:
    name: Code Linting with Security Rules
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}/bookshelf

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'

    - name: Clean node_modules
      run: rm -rf node_modules package-lock.json

    - name: Install dependencies
      run: npm install

    - name: Lint with ESLint
      run: npx eslint .

    - name: Security Scan (npm audit)
      run: npm audit --audit-level=high

    # - name: Security Scan (eslint-plugin-security)
    #   run: npx eslint --plugin eslint-plugin-security .





      # - name: Checkout
      #   uses: actions/checkout@v2

      # - name: Install npm packages
      #   run: npm install --force

      # - name: code Linting 
      #   run: npm run lint

      # # --- Static Application Security Testing (SAST) ---
      # - name: Run SAST with SonarCloud Scanner
      #   uses: sonarsource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }} # Ensure you've added this secret in GitHub

      # # --- Dependency Scanning ---
      # - name: Run Dependency Check with OWASP Dependency-Check
      #   uses: actions/dependency-check@v3
      #   with:
      #     project: 'your-project-name' # Replace with your project name
      #     scan_type: 'All'
      #     fail_on_severity: 'HIGH' # Adjust severity level as needed

      # # --- Code Linting with Security Rules ---
      # - name: Run ESLint with Security Plugin (for JavaScript/TypeScript)
      #   if: ${{ contains(github.event.commits.*.message, 'skip lint') == false }} # Option to skip linting in specific commits
      #   uses: eslint/eslint@v3
      #   with:
      #     extensions: .js,.jsx,.ts,.tsx
      #     overrideConfig: |
      #       {
      #         "plugins": ["security"],
      #         "extends": ["eslint:recommended", "plugin:security/recommended"],
      #         "rules": {
      #           // Add or override specific security rules here if needed
      #         }
      #       }

      # # --- Secret Scanning ---
      # - name: Run Secret Scanning with TruffleHog
      #   uses: trufflesecurity/trufflehog@v3
      #   with:
      #     scan_arguments: '--max-depth 10 --only-entropy --entropy-threshold 2.5' # Adjust scan depth and entropy as needed

      # # --- Container Scanning (if applicable) ---
      # - name: Build and Scan Docker Image (if Dockerfile exists)
      #   if: ${{ file_exists('Dockerfile') }}
      #   run: |
      #     docker build -t my-app .
      #     docker scan --fail-on severity=HIGH my-app # Requires Docker integration and appropriate setup


      # - uses: actions/checkout@v4
      # - name: Set up Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: 'lts/*'

      # - name: run CI
      #   run: npm install # or yarn install

      # - name: run lint
      #   run: npm run lint # or yarn lint
        
      # - name: run test
      #   run: npm run test # or yarn test
         
      # - name: run build
      #   run: npm run build # or yarn build